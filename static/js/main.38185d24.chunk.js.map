{"version":3,"sources":["Components/sudoku.js","Components/numberInput.js","HelperFunctions/saveValue.js","HelperFunctions/solve.js","Components/complete.js","Components/header.js","Components/resources.js","HelperFunctions/generatorSudoku.js","Components/shop.js","App.js","HelperFunctions/getResources.js","index.js"],"names":["Sudoku","props","useState","board","SetBoard","rows","squ","colGroup","bold","fontWeight","cursor","getFild","value","i","j","callBack","String","includes","style","replace","onClick","useEffect","squares","push","size","tds","className","RenderInputFild","radioGroup","type","id","name","checked","selectedNumber","onChange","htmlFor","RenderNInput","buttons","NumberInput","SaveBoard","key","saveValue","length","localStorage","setItem","SaveResources","LoadResources","Number","getItem","SolveOne","solveList","split","trySolve","shift","DesplaySolved","fill","backgroundColor","width","fillbar","height","solved","collect","collectAmount","disabled","newGame","clickBar","clickAmount","DisplayResources","resources","map","resource","valuePerSecond","display","resourcesRow","Value","Name","Interval","AmountPar","Display","FillArray","splice","CheckRowAndCulumn","arrayIndex","checkRow","checkColumn","filter","number","CheckSquare","squareSize","squareX","squareY","checkSquare","CheckSukoku","checkBoard","JSON","parse","stringify","MakeSudoku","square","randomNumber","randomIndexNumber","numArry","newBoard","Array","pickerArr","Math","floor","random","pickerIndex","notFull","sort","arr1","arr2","RemovePencelmark","rowID","culumnID","indexOf","curSquareY","curSquareX","RemoveNumbers","remove","randomIndex","arrOfIndex","removeIndex","RandomNewIndex","forEach","index","GetIndex","MarkOG","Item","available","affordable","title","description","costs","startCosts","maxTimesPurchase","priors","priceFunc","incremenAmount","text1","text2","PriceFunc","ClickFun","IncremenAmount","PriceNumber","purchaseAmount","Costs","price","StartCosts","CostText","costText","IsAffordable","find","Affordable","IsAvailable","ready","Priors","prior","Available","IsPurchase","MaxTimesPurchase","this","Title","Description","Text1","Text2","shopItems","startPrice","count","pow","log2","round","Shop","shopItem","pruchaseFunc","pruchaseFuncs","undefined","Func","item","abs","toFixed","DynamicDescription","buyUint","seleNumber","App","Resource","interval","amountPar","currencys","SetSelectedNumber","gameBoard","SetGameBoard","SetResources","SetSolved","FillBar","SetFillBar","Amounts","SetAmounts","Actives","SetActives","Intervals","SetIntervals","NewGame","Purchase","keyName","max","tempResources","resourceIndex","findIndex","barFill","tempFill","solve","tempGameBoard","NewSolve","shop","tempActives","tempIntervals","tempAmounts","GetIncrementels","savedBoard","curBoard","lengthValue","splitValue","LocalToArray","currency","amount","active","savedCallback","useRef","current","tick","setInterval","clearInterval","useInterval","PruchaseFunc","func","cost","tempActive","curValue","CollectResources","handleInput","e","document","addEventListener","removeEventListener","target","x","y","ReactDOM","render","StrictMode","getElementById"],"mappings":"iSAEe,SAASA,EAAOC,GAC9B,MAA0BC,qBAA1B,mBAAOC,EAAP,KAAcC,EAAd,KACIC,EAAO,GACPC,EAAM,GACNC,EAAW,GAETC,EAAO,CACZC,WAAY,OACZC,OAAQ,WAGT,SAASC,EAAQC,EAAOC,EAAGC,EAAGC,GAI7B,OAAc,OAFdH,EAAQI,OAAOJ,KAEOA,EAAMK,SAAS,MAEnC,oBAAIC,MAAOV,EAAX,SACEI,EAAMO,QAAQ,KAAM,KADtB,aAA4BN,GAA5B,OAAgCC,IAMhC,oBAAwBM,QAAS,kBAAML,EAASF,EAAGC,IAAnD,SACEF,GADF,aAAeC,GAAf,OAAmBC,IAkCtB,OA5BAO,qBAAU,WACT,IAAK,IAAIR,EAAI,EAAGA,EAAIZ,EAAMqB,QAAST,IAClCP,EAAIiB,KAAK,uBAAU,OAASV,IAG7B,IAAK,IAAIA,EAAI,EAAGA,EAAKZ,EAAMuB,KAAOvB,EAAMqB,QAAUT,IACjDR,EAAKkB,KAAK,mCAA4BjB,GAAb,OAASO,IAKnC,IAFA,IAESA,EAAI,EAAGA,EAAIZ,EAAMuB,KAAMX,IAAK,CAGpC,IAFA,IAAIY,EAAM,GAEDX,EAAI,EAAGA,EAAIb,EAAMuB,KAAMV,IAC/BW,EAAIF,KAAKZ,EAAQV,EAAMW,MAAMC,GAAGC,GAAGD,EAAEC,EAAEb,EAAMc,WAE9CR,EAASgB,KAAK,6BAAqBE,GAAZ,MAAQZ,IAE3BA,EAAIZ,EAAMqB,SAAWrB,EAAMqB,QAAU,IACxCjB,EAAKkB,KAAK,gCAAuBhB,GAAX,KAAOM,IAC7BN,EAAW,IAEZH,EAASC,MAGR,CAACJ,EAAMW,QAGT,uBAAOc,UAAU,cAAjB,SACEvB,IC7DJ,SAASwB,EAAgB1B,GACxB,IAAI2B,EAAa,GAgBjB,OAdAA,EAAWL,KACV,uBAECM,KAAM,QACNC,GAAI,MAAQ7B,EAAMW,MAClBmB,KAAM,cACNnB,MAAOX,EAAMW,MACboB,QAAS/B,EAAMgC,gBAAkBhC,EAAMW,MACvCsB,SAAUjC,EAAMc,UANX,QAAUd,EAAMW,QAUvBgB,EAAWL,KAAK,wBAAkCY,QAAS,MAAQlC,EAAMW,MAAzD,cAAkEX,EAAMW,MAAxE,MAAY,OAASX,EAAMW,QAEpCgB,EAGR,SAASQ,EAAanC,GAErB,IADA,IAAIoC,EAAU,GACLxB,EAAI,EAAGA,EAAIZ,EAAMuB,KAAMX,IAC/BwB,EAAQd,KAAK,cAACI,EAAD,CAAiBM,eAAgBhC,EAAMgC,eAAgBlB,SAAUd,EAAMc,SAAUH,MAAOC,EAAI,KAG1G,OAAO,sBAAKa,UAAU,gBAAf,cAAiCW,EAAjC,OAGO,SAASC,EAAYrC,GACnC,OACC,8BACC,cAACmC,EAAD,CAAcH,eAAgBhC,EAAMgC,eAAgBT,KAAMvB,EAAMuB,KAAMT,SAAUd,EAAMc,aChCzF,SAASwB,EAAUpC,EAAOqC,GAEtB,IAAIC,EAAS,UAAMtC,EAAMuC,OAAZ,aAAuBvC,GAEpCwC,aAAaC,QAAQJ,EAAKC,GAG9B,SAASI,EAAcL,EAAK5B,GACxB+B,aAAaC,QAAQJ,EAAK5B,GAG9B,SAASkC,EAAcN,GACnB,OAAOO,OAAOJ,aAAaK,QAAQR,ICVvC,SAASS,EAAS9C,GAEd,IDWkBqC,ECXdU,GDWcV,ECXW,eDYtBG,aAAaK,QAAQR,ICV5B,GAAgB,IAAbU,EAAH,CAGAA,EAAYA,EAAUC,MAAM,KAE5B,IAAK,IAAItC,EAAI,EAAGA,EAAIqC,EAAUR,OAAQ7B,IAAK,CACvC,IAAIuC,EAAWF,EAAU,GAAGC,MAAM,IAElC,GAAIhD,EAAMiD,EAAS,IAAIA,EAAS,KAAOA,EAAS,GAK5C,OAHAF,EAAUG,QACVR,EAAc,eAAgBK,GAEvBE,EAEXF,EAAUG,UClBH,SAASC,EAAcrD,GAElC,IAAMsD,EAAO,CACTC,gBAAiB,UACjBC,MAAM,GAAD,OAAKxD,EAAMyD,QAAX,KACLC,OAAQ,OACRjD,OAAQ,WAGZ,OACI,sBAAKgB,UAAU,aAAf,UACKzB,EAAM2D,OACH,wBAAQlC,UAAU,SAASG,KAAK,SAAST,QAAS,kBAAMnB,EAAM4D,QAAQ,MAAO5D,EAAM6D,cAAe7D,EAAMuB,KAAMvB,EAAMqB,UAApH,sBACA,wBAAQI,UAAU,SAASG,KAAK,SAASkC,UAAQ,EAAjD,wBAEJ,wBAAQrC,UAAU,SAASG,KAAK,SAAST,QAAS,kBAAMnB,EAAM+D,QAAQ/D,EAAMuB,KAAMvB,EAAMqB,UAAxF,wBAEA,qBAAKQ,GAAG,UAAUV,QAAS,kBAAMnB,EAAMgE,SAAShE,EAAMiE,cAAtD,SACI,qBAAKhD,MAAOqC,EAAZ,oBCpBD,SAASD,EAAcrD,GAClC,OACI,qBAAKyB,UAAU,SAAf,SACI,sBAAMA,UAAU,UAAhB,2B,MCaG,SAASyC,EAAiBlE,GAErC,OACI,8BACI,uBAAOyB,UAAU,WAAjB,SACI,kCACI,2CACA,uBACA,uBAECzB,EAAMmE,UAAUC,KAAI,SAAAC,GAClB,OA1BvB,SAAsB1D,EAAOmB,EAAMwC,EAAgBC,GAE/C,GAAIA,EAGJ,OACI,+BACI,6BAAKzC,IACL,6BAAKnB,IACL,+BAAK2D,EAAL,WAiBkBE,CAAaH,EAASI,MAAMJ,EAASK,KAAOL,EAASM,SAAS,IAAQN,EAASO,UAAWP,EAASQ,mBC1BjI,SAASC,EAAUvD,GAEf,MADuB,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GAC1BwD,OAAO,EAAGxD,GAGpC,SAASyD,EAAkBC,EAAY/E,EAAOqB,GAI1C,IAHA,IAAI2D,EAAWJ,EAAUvD,GACrB4D,EAAcL,EAAUvD,GAFoB,WAIvCX,GACLsE,EAAWA,EAASE,QAAO,SAAAC,GAAM,OAAIA,GAAUnF,EAAM+E,GAAYrE,MACjEuE,EAAcA,EAAYC,QAAO,SAAAC,GAAM,OAAIA,GAAUnF,EAAMU,GAAGqE,OAFzDrE,EAAI,EAAGA,EAAIW,EAAMX,IAAM,EAAvBA,GAKT,OAA0B,GAAnBsE,EAASzC,QAAqC,GAAtB0C,EAAY1C,OAG/C,SAAS6C,EAAYpF,EAAOqB,EAAMgE,EAAYC,EAASC,GAGnD,IAFA,IAAIC,EAAcZ,EAAUvD,GADgC,WAGnDX,GACL,IAJwD,eAI/CC,GACL6E,EAAcA,EAAYN,QAAO,SAAAC,GAAM,OAAIA,GAAUnF,EAAMU,EAAI6E,GAAS5E,EAAI2E,OADvE3E,EAAI,EAAGA,EAAI0E,EAAY1E,IAAM,EAA7BA,IADJD,EAAI,EAAGA,EAAI2E,EAAY3E,IAAM,EAA7BA,GAKT,OAA6B,GAAtB8E,EAAYjD,OAGvB,SAASkD,EAAYpE,EAAMrB,EAAOmB,GAG9B,IAFA,IAAIuE,EAAaC,KAAKC,MAAMD,KAAKE,UAAU7F,IAElCU,EAAI,EAAGA,EAAIgF,EAAWnD,OAAQ7B,IACnC,IAAK,IAAIC,EAAI,EAAGA,EAAI+E,EAAWnD,OAAQ5B,IAE/BE,OAAO6E,EAAWhF,GAAGC,IAAIG,SAAS,QAClC4E,EAAWhF,GAAGC,GAAK+E,EAAWhF,GAAGC,GAAGK,QAAQ,KAAM,KAK9D,IAAK,IAAIN,EAAI,EAAGA,EAAIW,EAAMX,IACtB,IAAKoE,EAAkBpE,EAAGgF,EAAYrE,GAClC,OAAO,EAGf,IAAK,IAAIX,EAAI,EAAGA,EAAIS,EAAST,IACzB,IAAK,IAAIC,EAAI,EAAGA,EAAIQ,EAASR,IACzB,IAAKyE,EAAYM,EAAYrE,EAAMF,EAAST,EAAIS,EAASR,EAAIQ,GACzD,OAAO,EAInB,OAAO,EAGX,SAAS2E,EAAWzE,EAAM0E,GAStB,IARA,IAKWC,EAAcC,EALrBC,EAAUtB,EAAUvD,GACpB8E,EAAWC,MAAM/E,GAAM+B,KAAK,MAAMc,KAAI,kBAAMkC,MAAM/E,GAAM+B,KAAK8C,MAC7DG,EAAY,CAAC,CAACC,KAAKC,MAAMD,KAAKE,SAAWnF,GAAOiF,KAAKC,MAAMD,KAAKE,SAAWnF,KAC3EoF,EAAc,GAIdC,GAAU,EACPA,GAEHL,EAAUM,MAAK,SAACC,EAAMC,GAAP,OAAgBD,EAAKrE,OAASsE,EAAKtE,UAE1C,EACJ8D,EAAU9D,OAAS,IAEf4D,EAASE,EAHT,GAG0B,IAAIA,EAH9B,GAG+C,IAAI9D,OAAS,IAE5D0D,EAAoBK,KAAKC,MAAMD,KAAKE,SAAWL,EAASE,EALxD,GAKyE,IAAIA,EAL7E,GAK8F,IAAI9D,QAClGyD,EAAeG,EAASE,EANxB,GAMyC,IAAIA,EAN7C,GAM8D,IAAIJ,GAElEE,EAASE,EART,GAQ0B,IAAIA,EAR9B,GAQ+C,IAAM,CAACL,GACtDc,EAAiBT,EATjB,GASkC,GAAIA,EATtC,GASuD,GAAIF,EAAU9E,EAAM2E,EAAcD,EAAQU,EAAaJ,IAElHA,EAAUxB,OAXN,EAWoB,GACxB4B,EAAY5B,OAZR,EAYsB,IAI1BwB,EAAU9D,QAAU,IACpBmE,GAAU,GAIlB,OAAKjB,EAAYpE,EAAM8E,EAAUJ,GAI1BI,EAHIL,EAAWzE,EAAM0E,GAMhC,SAASe,EAAiBC,EAAOC,EAAUb,EAAU9E,EAAM2E,EAAcX,EAAYoB,EAAaJ,GAE9F,IAAK,IAAI3F,EAAI,EAAGA,EAAIW,EAAMX,IAClByF,EAASY,GAAOrG,GAAG6B,OAAS,IAC5B4D,EAASY,GAAOrG,GAAKyF,EAASY,GAAOrG,GAAGwE,QAAO,SAAAC,GAAM,OAAIA,GAAUa,KAE/DG,EAASY,GAAOrG,GAAG6B,QAAU,GAC7BuE,EAAiBC,EAAOrG,EAAGyF,EAAU9E,EAAM8E,EAASY,GAAOrG,GAAG,GAAI2E,EAAYoB,EAAaJ,GAEvFI,EAAY3F,SAAZ,UAAwBiG,GAAxB,OAAgCrG,MAChC2F,EAAUxB,OAAO4B,EAAYQ,QAAZ,UAAuBF,GAAvB,OAA+BrG,IAAM,GACtD+F,EAAY5B,OAAO4B,EAAYQ,QAAZ,UAAuBF,GAAvB,OAA+BrG,IAAM,KAGtD+F,EAAY3F,SAAZ,UAAwBiG,GAAxB,OAAgCrG,MACtC+F,EAAYrF,KAAZ,UAAoB2F,GAApB,OAA4BrG,IAC5B2F,EAAUjF,KAAK,CAAC2F,EAAOrG,MAI3ByF,EAASzF,GAAGsG,GAAUzE,OAAS,IAC/B4D,EAASzF,GAAGsG,GAAYb,EAASzF,GAAGsG,GAAU9B,QAAO,SAAAC,GAAM,OAAIA,GAAUa,KAErEG,EAASzF,GAAGsG,GAAUzE,QAAU,GAChCuE,EAAiBpG,EAAGsG,EAAUb,EAAU9E,EAAM8E,EAASzF,GAAGsG,GAAU,GAAI3B,EAAYoB,EAAaJ,GAE7FI,EAAY3F,SAAZ,UAAwBJ,GAAxB,OAA4BsG,MAC5BX,EAAUxB,OAAO4B,EAAYQ,QAAZ,UAAuBvG,GAAvB,OAA2BsG,IAAa,GACzDP,EAAY5B,OAAO4B,EAAYQ,QAAZ,UAAuBvG,GAAvB,OAA2BsG,IAAa,KAGzDP,EAAY3F,SAAZ,UAAwBJ,GAAxB,OAA4BsG,MAClCP,EAAYrF,KAAZ,UAAoBV,GAApB,OAAwBsG,IACxBX,EAAUjF,KAAK,CAACV,EAAGsG,MAQ/B,IAHA,IAAIE,EAAaZ,KAAKC,MAAMQ,EAAQ1B,GAAcA,EAC9C8B,EAAab,KAAKC,MAAMS,EAAW3B,GAAcA,EAE5C3E,EAAI,EAAGA,EAAI2E,EAAY3E,IAC5B,IAAK,IAAIC,EAAI,EAAGA,EAAI0E,EAAY1E,IACxBwF,EAASzF,EAAIwG,GAAYvG,EAAIwG,GAAY5E,OAAS,IAClD4D,EAASzF,EAAIwG,GAAYvG,EAAIwG,GAAchB,EAASzF,EAAIwG,GAAYvG,EAAIwG,GAAYjC,QAAO,SAAAC,GAAM,OAAIA,GAAUa,KAE3GG,EAASzF,EAAIwG,GAAYvG,EAAIwG,GAAY5E,QAAU,GACnDuE,EAAiBpG,EAAIwG,EAAYvG,EAAIwG,EAAYhB,EAAU9E,EAAM8E,EAASzF,EAAIwG,GAAYvG,EAAIwG,GAAY,GAAI9B,EAAYoB,EAAaJ,GAEnII,EAAY3F,SAAZ,UAAwBJ,EAAIwG,GAA5B,OAAyCvG,EAAIwG,MAC7Cd,EAAUxB,OAAO4B,EAAYQ,QAAZ,UAAuBvG,EAAIwG,GAA3B,OAAwCvG,EAAIwG,IAAe,GAC5EV,EAAY5B,OAAO4B,EAAYQ,QAAZ,UAAuBvG,EAAIwG,GAA3B,OAAwCvG,EAAIwG,IAAe,KAG5EV,EAAY3F,SAAZ,UAAwBJ,EAAIwG,GAA5B,OAAyCvG,EAAIwG,MACnDV,EAAYrF,KAAZ,UAAoBV,EAAIwG,GAAxB,OAAqCvG,EAAIwG,IACzCd,EAAUjF,KAAK,CAACV,EAAIwG,EAAYvG,EAAIwG,MAkBxD,SAASC,EAAcpH,EAAOqH,GAE1B,IAAIhG,EAAOrB,EAAMuC,OACb+E,EAmBR,SAAwBjG,EAAMgG,GAI1B,IAHA,IAAIE,EAAa,GACbC,EAAc,GAET9G,EAAI,EAAGA,EAAIW,EAAOA,EAAMX,IAC7B6G,EAAWnG,KAAKV,GAGpB6G,EAAWZ,MAAK,kBAAOL,KAAKE,SAAW,GAAO,GAAK,KAEnD,IAAK,IAAI9F,EAAI,EAAGA,EAAI2G,EAAQ3G,IACxB8G,EAAYpG,KAAKmG,EAAW7G,IAGhC,OAAO8G,EAjCWC,CAAepG,EAAMgG,GAEnCtE,EAAY,GAchB,OAZAuE,EAAYI,SAAQ,SAAAC,GAChB,IAAIH,EA+BZ,SAAkBnG,EAAM8D,GAGpB,MAAO,CAFGmB,KAAKC,MAAMpB,EAAS9D,GACjB8D,EAAS9D,GAjCAuG,CAASvG,EAAMsG,GAEjC5E,EAAU3B,KAAV,UAAkBoG,EAAY,IAA9B,OAAmCA,EAAY,IAA/C,OAAoDxH,EAAMwH,EAAY,IAAIA,EAAY,MAEtFxH,EAAMwH,EAAY,IAAIA,EAAY,IAAM,MAG5C9E,EAAc,eAAeK,GA1BjC,SAAgB/C,GAEZ,IAAK,IAAIU,EAAI,EAAGA,EAAIV,EAAMuC,OAAQ7B,IAC9B,IAAK,IAAIC,EAAI,EAAGA,EAAIX,EAAMuC,OAAQ5B,IAC1BX,EAAMU,GAAGC,GAAG4B,OAAS,IACrBvC,EAAMU,GAAGC,GAAT,UAAiBX,EAAMU,GAAGC,GAA1B,OAuBZkH,CAAO7H,GAEAA,E,UC1LL8H,EACF,WAAYC,EAAWC,EAAYpG,EAAMqG,EAAOC,EAAaC,EACzDC,EAAYC,EAAkBC,EAAQC,EAAWC,EAAgBC,EAAOC,GAAQ,IAAD,gCAgBnFC,UAAY,aAhBuE,KAiBnFC,SAAW,aAjBwE,KAkBnFC,eAAiB,aAlBkE,KAoBnFC,YAAc,WACV,IAAIC,EAAiBpG,EAAc,EAAK6B,MACxC,EAAKwE,MAAMtB,SAAQ,SAACuB,EAAOtB,GACvB,EAAKqB,MAAMrB,GAAS,CAAC,EAAKqB,MAAMrB,GAAO,GAAI,EAAKgB,UAAU,EAAKO,WAAWvB,GAAQoB,QAvBP,KA2BnFI,SAAW,WACP,IAAIC,EAAW,GAKf,OAHA,EAAKJ,MAAMtB,SAAQ,SAAAuB,GACfG,EAAShI,KAAK,iCAAO6H,EAAM,GAAb,KAAkB,uBAAM1H,UAAU,QAAhB,cAA0B0H,EAAM,MAAU,8BAEvEG,GAjCwE,KAoCnFC,aAAe,SAACpF,GACZ,IAAI+D,GAAa,EACjB,EAAKgB,MAAMtB,SAAQ,SAAAuB,GACXhF,EAAUqF,MAAK,SAAAnF,GAAQ,OAAIA,EAASK,MAAQyE,EAAM,MAAI1E,MAAQ0E,EAAM,KACpEjB,GAAa,MAGrB,EAAKuB,WAAavB,GA3C6D,KA8CnFwB,YAAc,WAEV,IAAIC,GAAQ,EAEZ,EAAKC,OAAOhC,SAAQ,SAACiC,GACEhH,EAAcgH,IAEb,IAChBF,GAAQ,MAIZA,IACA,EAAKG,WAAY,IA3D0D,KA+DnFC,WAAa,WAEUlH,EAAc,EAAK6B,OAElB,EAAKsF,mBACrB,EAAKF,WAAY,IAnErBG,KAAKH,UAAY7B,EACjBgC,KAAKR,WAAavB,EAClB+B,KAAKvF,KAAO5C,EACZmI,KAAKC,MAAQ/B,EACb8B,KAAKE,YAAc/B,EACnB6B,KAAKf,MAAQb,EACb4B,KAAKb,WAAad,EAClB2B,KAAKD,iBAAmBzB,EACxB0B,KAAKL,OAASpB,EACdyB,KAAKpB,UAAYJ,EACjBwB,KAAKlB,eAAiBL,EACtBuB,KAAKG,MAAQzB,EACbsB,KAAKI,MAAQzB,GA4DR0B,EAAY,CACrB,IAAItC,GAAK,GAAM,EACX,UACA,qCACA,8BACA,CAAC,CAAC,MAAO,IAAK,CAAC,GACf,EAAG,CAAC,KACJ,kBAAM,KACN,kBAAM,KAEV,IAAIA,GAAK,GAAM,EACX,gBACA,6BAFJ,mCAII,CAAC,CAAC,MAAO,IAAK,CAAC,GAAI,GACnB,CAAC,YACD,SAACuC,EAAYC,GAAb,OAAuBhE,KAAKC,MAAM8D,EAAa/D,KAAKiE,IAAID,EAAO,UAC/D,SAACA,GAAD,OAAW,IAA+B,IAAvBhE,KAAKkE,KAAKF,EAAQ,KACrC,2BAA4B,YAEhC,IAAIxC,GAAK,GAAO,EACZ,mBACA,gCACA,4BACA,CAAC,CAAC,MAAO,IAAK,CAAC,GAAI,GACnB,CAAC,UAAW,kBACZ,SAACuC,EAAYC,GAAb,OAAuBhE,KAAKC,MAAM8D,EAAa/D,KAAKiE,IAAID,EAAO,UAC/D,SAACA,GAAD,OAAqC,EAAzBhE,KAAKkE,KAAKF,EAAQ,KAAY,IAC1C,sBAAuB,cAE3B,IAAIxC,GAAK,GAAO,EACZ,iBACA,mCACA,4BACA,CAAC,CAAC,MAAO,KAAM,CAAC,IAAK,EACrB,CAAC,UAAW,kBACZ,kBAAM,MACN,kBAAM,KAEV,IAAIA,GAAK,GAAO,EACZ,eACA,2BACA,0CACA,CAAC,CAAC,MAAO,KAAM,CAAC,IAAK,GACrB,CAAC,UAAW,kBACZ,SAACuC,EAAYC,GAAb,OAAuBhE,KAAKmE,MAAM,GAAKnE,KAAKiE,IAAW,GAAND,EAAW,SAC5D,SAACA,GAAD,OAAWA,EAAQ,IACnB,yCAA0C,MAgC3C,SAASI,EAAK5K,GAEjB,MAAwBC,mBAASqK,GAAjC,mBAAOM,EAAP,UAEA,OACI,sBAAKnJ,UAAU,OAAf,UACI,qBAAKA,UAAU,YAAf,kBAICmJ,EAAKxG,KAAI,SAAAyG,GAEN,IAAIC,EAAe9K,EAAM+K,cAAcvB,MAAK,SAAAsB,GAAY,OAAIA,EAAapG,MAAQmG,EAASnG,QAc1F,YAZoBsG,GAAhBF,IACAD,EAAS/B,SAAWgC,EAAaG,MAErCJ,EAAStB,aAAavJ,EAAMmE,WAC5B0G,EAAS7B,cAET6B,EAASnB,cACTmB,EAASd,aAELc,EAAST,QACTS,EAASV,YAhC7B,SAA4Be,GACxB,IAAIjC,EAAiBpG,EAAcqI,EAAKxG,MACpCW,EAAS6F,EAAKnC,eAAeE,EAAiB,GAAKiC,EAAKnC,eAAeE,GAG3E,OAFA5D,EAASmB,KAAK2E,IAAI9F,EAAO+F,QAAQ,IAE3B,GAAN,OAAUF,EAAKd,OAAf,OAAuB/E,GAAvB,OAAgC6F,EAAKb,OA2BEgB,CAAmBR,IAhD9D,SAAiBK,GACb,GAAKA,EAAKpB,UAIV,OACI,yBAAQhG,UAAWoH,EAAKzB,WAAYtI,QAAS,kBAAM+J,EAAKpC,SAASoC,EAAKhC,MAAOgC,EAAKxG,KAAMwG,EAAKlB,mBAAmBvI,UAAU,SAASG,KAAK,SAAxI,UAAkJsJ,EAAKxG,KACnJ,sBAAKjD,UAAU,cAAf,UACI,qBAAKA,UAAU,cAAf,SAA8ByJ,EAAKhB,QACnC,qBAAKzI,UAAU,cAAf,SAA8ByJ,EAAK7B,aACnC,qBAAK5H,UAAU,cAAf,SAA8ByJ,EAAKf,oBAwC5BmB,CAAQT,SC5K/B,IAAIU,EAAa,EAsSFC,MApSf,WACC,IAIMC,EAOL,WAAY3J,EAAMnB,EAAO+K,EAAUC,EAAWpH,GAAU,yBANxDG,KAAO,OAMgD,KALvDD,MAAQ,EAK+C,KAJvDE,SAAW,EAI4C,KAHvDC,UAAY,EAG2C,KAFvDC,SAAU,EAGToF,KAAKvF,KAAO5C,EACZmI,KAAKxF,MAAQ9D,EACbsJ,KAAKtF,SAAW+G,EAChBzB,KAAKrF,UAAY+G,EACjB1B,KAAKpF,QAAUN,GAIbqH,EACH,CACC,IAAIH,EAAS,MAAO,EAAG,EAAG,GAAG,GAC7B,IAAIA,EAAS,QAGf,EAA4CxL,mBAASsL,GAArD,mBAAOvJ,EAAP,KAAuB6J,EAAvB,KACA,EAAkC5L,mBAASqG,MA1BhC,GA0B4ChD,KAAKgD,MA1BjD,GA0B6DhD,KAAK,QAA7E,mBAAOwI,EAAP,KAAkBC,EAAlB,KACA,EAAkC9L,mBAAS2L,GAA3C,mBAAOzH,EAAP,KAAkB6H,EAAlB,KACA,EAA4B/L,oBAAS,GAArC,mBAAO0D,EAAP,KAAesI,EAAf,KACA,EAA8BhM,mBAAS,GAAvC,mBAAOiM,EAAP,KAAgBC,EAAhB,KACA,EAA8BlM,mBAAS,CAAC,EAAG,IAA3C,mBAAOmM,EAAP,KAAgBC,EAAhB,KACA,EAA8BpM,mBAAS,EAAC,GAAO,IAA/C,mBAAOqM,EAAP,KAAgBC,EAAhB,KACA,EAAkCtM,mBAAS,CAAC,MAA5C,mBAAOuM,EAAP,KAAkBC,EAAlB,KA8CA,SAASC,GAAQnL,EAAMF,GACtB,IAAIgF,EAAWL,EAAWzE,EAAMF,GAChCgF,EAAWiB,EAAcjB,EAjFb,GAkFZ0F,EAAa1F,GACb/D,EAAU+D,EAAU,YAIrB,SAASsG,GAAStE,EAAOuE,EAASC,GAKjC,GAHAjK,EAAcgK,EADA/J,EAAc+J,GACK,KAEd/J,EAAc+J,IACbC,GAApB,CAIA,IAAIC,EAAgB3I,EAEpBkE,EAAMT,SAAQ,SAAAuB,GACb,IAAI4D,EAAgBD,EAAcE,WAAU,SAAA3I,GAAQ,OAAIA,EAASK,MAAQyE,EAAM,MAC/E2D,EAAcC,GAAetI,MAAQqI,EAAcC,GAAetI,MAAQ0E,EAAM,GAChFvG,EAAcuG,EAAM,GAAI2D,EAAcC,GAAetI,UAGtDuH,EAAa,YAAIc,KA6ClB,SAAS9I,GAASiJ,GACjB,IAAIC,EAAWhB,EAAUe,EAErBC,GAAY,IACXvJ,EACHwI,EAAW,MAGXA,EAAW,GAmDd,SAAkBgB,GACjB,GAAa,MAATA,EACH,OAED,IAAIC,EAAa,YAAOtB,GACxBsB,EAAcD,EAAM,IAAIA,EAAM,IAAMpM,OAAOoM,EAAM,IACjDpB,EAAaqB,GACb9K,EAAU8K,EAAe,YAzDvBC,CAASrK,EAAS8I,KAInBK,EAAWe,GA/Hb9L,qBAAU,YA2BV,WACC,IAAIkM,EAAOhD,EACPiD,EAAcjB,EACdkB,EAAgBhB,EAChBiB,EAAcrB,EAElBmB,EAAY,GAAK1K,EAAcyK,EAAK,GAAG5I,MAAQ,EAC/C8I,EAAc,GAAKF,EAAK,GAAGvE,eAAelG,EAAcyK,EAAK,GAAG5I,OAChE+I,EAAY,GAAKH,EAAK,GAAGvE,eAAelG,EAAcyK,EAAK,GAAG5I,OAC9D6I,EAAY,GAAK1K,EAAcyK,EAAK,GAAG5I,MAAQ,EAC/C+I,EAAY,GAAKH,EAAK,GAAGvE,eAAelG,EAAcyK,EAAK,GAAG5I,OAE9D+H,EAAae,GACbjB,EAAWgB,GACXlB,EAAWoB,GAxCXC,GAEA,IAAIC,EAAajL,aAAaK,QAAQ,YACtC,GAAkB,MAAd4K,EAAoB,CAEvB,IAAIC,EPtCP,SAAsBjN,GAClB,IAAIkN,EAAclN,EAAMuC,MAAM,MAE9B,GAAI2K,EAAYpL,QAAU,EACtB,OAAO,KASX,IANA,IAAIA,EAASoL,EAAY,GAErBC,EAAaD,EAAY,GAAG3K,MAAM,KAElCsH,EAAQ,EACRnE,EAAW,GACNzF,EAAI,EAAGA,EAAI6B,EAAQ7B,IAAK,CAC7ByF,EAAS/E,KAAK,IACd,IAAK,IAAIT,EAAI,EAAGA,EAAI4B,EAAQ5B,IACxBwF,EAASzF,GAAGU,KAAKP,OAAO+M,EAAWtD,KACnCA,IAIR,OAAOnE,EOiBO0H,CAAaJ,GAC5B5B,EAAa6B,QAGblB,GA5CS,EACG,GA6CbV,GAsIAJ,EAAUxH,KAAI,SAAC4J,EAAUnG,EAAO+D,GAC/BA,EAAU/D,GAAOpD,MAAQ5B,EAAcmL,EAAStJ,SAG1CkH,MAzIL,IAGHxK,qBAAU,WACT6K,EAAUtG,EAnDA,EAmDkBmG,EAlDf,MAmDX,CAACA,IA2NL,SAAqBhL,EAAUmN,EAAQC,EAAQxC,GAC9C,IAAMyC,EAAgBC,mBAEtBhN,qBAAU,WACT+M,EAAcE,QAAUvN,KAGzBM,qBAAU,WACT,GAAI8M,EAAQ,CACX,SAASI,IACRH,EAAcE,QAAQJ,GAGvB,IAAIpM,EAAK0M,YAAYD,EAAM5C,GAC3B,OAAO,kBAAM8C,cAAc3M,QAvO7B4M,CAAYzK,GAAUoI,EAAQ,GAAIE,EAAQ,GAAIE,EAAU,IAExDpL,qBAAU,WACLkL,EAAQ,IAAM3I,GACjBC,GAAQ,MAAMwI,EAAQ,GA1Db,EACG,KA0DX,CAACzI,IA7DU,IAsKR+K,GACL,WAAY5M,EAAM6M,GAAO,oBACxB1E,KAAKvF,KAAO5C,EACZmI,KAAKgB,KAAO0D,GAIV5D,GAAgB,CACnB,IAAI2D,GAAapE,EAAU,GAAG5F,MAlE/B,SAAyBkK,EAAMhC,EAASC,GACvCF,GAASiC,EAAMhC,EAASC,GACxB,IAAIgC,EAAavC,EACjBuC,EAAW,IAAK,EAChBtC,EAAW,YAAIsC,OA+Df,IAAIH,GAAapE,EAAU,GAAG5F,MA5D/B,SAA8BkK,EAAMhC,EAASC,GAC5CF,GAASiC,EAAMhC,EAASC,GACxB,IAAI5D,EAAiBpG,EAAc+J,GAE/BY,EAAgBhB,EACpBgB,EAAc,GAAKlD,EAAU,GAAGvB,eAAeE,GAE/CwD,EAAa,YAAIe,OAsDjB,IAAIkB,GAAapE,EAAU,GAAG5F,MAnD/B,SAAgCkK,EAAMhC,EAASC,GAC9CF,GAASiC,EAAMhC,EAASC,GAExB,IAAI5D,EAAiBpG,EAAc+J,GAC/Ba,EAAcrB,EAClBqB,EAAY,GAAKnD,EAAU,GAAGvB,eAAeE,GAC7CoD,EAAW,YAAIoB,OA8Cf,IAAIiB,GAAapE,EAAU,GAAG5F,MA3C/B,SAA2BkK,EAAMhC,EAASC,GACzCF,GAASiC,EAAMhC,EAASC,GACxB,IAAIgC,EAAavC,EACjBuC,EAAW,IAAK,EAChBtC,EAAW,YAAIsC,OAwCf,IAAIH,GAAapE,EAAU,GAAG5F,MArC/B,SAA6BkK,EAAMhC,EAASC,GAC3CF,GAASiC,EAAMhC,EAASC,GAExB,IAAI5D,EAAiBpG,EAAc+J,GAC/Ba,EAAcrB,EAClBqB,EAAY,GAAKnD,EAAU,GAAGvB,eAAeE,GAC7CoD,EAAW,YAAIoB,QA0ChB,SAAS7J,GAAQ9B,EAAMnB,EAAOY,EAAMF,GAEnC,IAAIyL,EAAgB3I,EAEpB2I,EAActD,MAAK,SAAAnF,GAAQ,OAAIA,EAASK,MAAQ5C,KAAM2C,MC9MxD,SAA0BlC,EAAK5B,GAE3B,IAAImO,EAAWjM,EAAcN,GAI7B,OAFAK,EAAcL,EADduM,GAAsBnO,GAGfmO,EDwMqDC,CAAiBjN,EAAMnB,GAErFqL,EAAac,GACbJ,GAAQnL,EAAMF,GA0Cf,OAdAD,qBAAU,WACT,IAAM4N,EAAc,SAACC,GAChBA,EAAE1M,KAhOG,GAgOqB,GAAT0M,EAAE1M,MACtBsJ,EAAkBoD,EAAE1M,KACpBgJ,EAAa0D,EAAE1M,MAKjB,OAFA2M,SAASC,iBAAiB,UAAWH,GAE9B,WACNE,SAASE,oBAAoB,UAAWJ,MAEvC,IAGF,gCACC,cAAC,EAAD,IACA,sBAAKvN,UAAU,OAAf,UACC,gCACC,cAACyC,EAAD,CAAkBC,UAAWA,IAC7B,cAAC9B,EAAD,CAAaL,eAAgBA,EAAgBT,KAlPtC,EAkPkDT,SAzBnC,SAACuE,GAC1BkG,EAAalG,EAAOgK,OAAO1O,MAC3BkL,EAAkBxG,EAAOgK,OAAO1O,UAwB7B,sBAAKc,UAAU,SAAf,UACC,cAAC1B,EAAD,CACCwB,KArPK,EAsPLF,QArPQ,EAsPRP,SAlDN,SAAqBwO,EAAGC,GACvB,GAAiB,MAAbzD,EAAJ,CAGA,IAAIsB,EAAa,YAAOtB,GACxBsB,EAAckC,GAAGC,GAAKxO,OAAOwK,GAC7BQ,EAAaqB,GACb9K,EAAU8K,EAAe,cA4CpBzM,MAAOmL,IAER,cAAC,EAAD,CACCnI,OAAQA,EACRI,QAAS2I,GACTrL,QA5PQ,EA6PRE,KA9PK,EA+PLqC,QAASA,GACTI,SAAUA,GACVP,QAASyI,EACTjI,YAAamI,EAAQ,GACrBvI,cAAeuI,EAAQ,WAI1B,8BACC,cAAC,EAAD,CAAMjI,UAAWA,EAAW4G,cAAeA,cEpRhDyE,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFR,SAASS,eAAe,W","file":"static/js/main.38185d24.chunk.js","sourcesContent":["import { useEffect, useState } from \"react\";\r\n\r\nexport default function Sudoku(props) {\r\n\tconst [board, SetBoard] = useState()\r\n\tlet rows = []\r\n\tlet squ = []\r\n\tlet colGroup = []\r\n\r\n\tconst bold = {\r\n\t\tfontWeight: 'bold',\r\n\t\tcursor: \"default\"\r\n\t  }\r\n\r\n\tfunction getFild(value, i, j, callBack) {\r\n\r\n\t\tvalue = String(value)\r\n\r\n\t\tif ( value != null && value.includes(\"og\")) {\r\n\t\t\treturn (\r\n\t\t\t\t<td style={bold} key={`tdK${i}${j}`}>\r\n\t\t\t\t\t{value.replace('og', '')}\r\n\t\t\t\t</td>)\r\n\t\t}\r\n\t\telse {\r\n\t\t\treturn (\r\n\t\t\t\t<td key={`tdK${i}${j}`} onClick={() => callBack(i, j)}>\r\n\t\t\t\t\t{value}\r\n\t\t\t\t</td>)\r\n\t\t}\r\n\t}\r\n\r\n\tuseEffect(() => {\r\n\t\tfor (let i = 0; i < props.squares; i++) {\r\n\t\t\tsqu.push(<col key={'colG' + i} />)\r\n\t\t}\r\n\r\n\t\tfor (let i = 0; i < (props.size / props.squares); i++) {\r\n\t\t\trows.push(<colgroup key={'colG' + i}>{squ}</colgroup>)\r\n\t\t}\r\n\r\n\t\tlet cusKey = 0\r\n\r\n\t\tfor (let i = 0; i < props.size; i++) {\r\n\t\t\tlet tds = []\r\n\r\n\t\t\tfor (let j = 0; j < props.size; j++) {\r\n\t\t\t\ttds.push(getFild(props.value[i][j],i,j,props.callBack))\r\n\t\t\t}\r\n\t\t\tcolGroup.push(<tr key={'trK' + i}>{tds}</tr>)\r\n\r\n\t\t\tif (i % props.squares == props.squares - 1) {\r\n\t\t\t\trows.push(<tbody key={'tb' + i}>{colGroup}</tbody>)\r\n\t\t\t\tcolGroup = []\r\n\t\t\t}\r\n\t\t\tSetBoard(rows)\r\n\r\n\t\t}\r\n\t}, [props.value])\r\n\r\n\treturn (\r\n\t\t<table className=\"sudokuTable\">\r\n\t\t\t{board}\r\n\t\t</table>\r\n\t)\r\n}","function RenderInputFild(props) {\r\n\tlet radioGroup = []\r\n\r\n\tradioGroup.push(\r\n\t\t<input\r\n\t\t\tkey={\"input\" + props.value}\r\n\t\t\ttype={\"radio\"}\r\n\t\t\tid={\"num\" + props.value}\r\n\t\t\tname={\"radioNumber\"}\r\n\t\t\tvalue={props.value}\r\n\t\t\tchecked={props.selectedNumber == props.value}\r\n\t\t\tonChange={props.callBack}\r\n\t\t/>\r\n\t)\r\n\r\n\tradioGroup.push(<label key={\"labl\" + props.value} htmlFor={\"num\" + props.value}> {props.value} </label>)\r\n\r\n\treturn radioGroup\r\n}\r\n\r\nfunction RenderNInput(props) {\r\n\tlet buttons = []\r\n\tfor (let i = 0; i < props.size; i++) {\r\n\t\tbuttons.push(<RenderInputFild selectedNumber={props.selectedNumber} callBack={props.callBack} value={i + 1} />)\r\n\t}\r\n\r\n\treturn <div className=\"radio-toolbar\"> {buttons} </div>\r\n}\r\n\r\nexport default function NumberInput(props) {\r\n\treturn (\r\n\t\t<div>\r\n\t\t\t<RenderNInput selectedNumber={props.selectedNumber} size={props.size} callBack={props.callBack} />\r\n\t\t</div>\r\n\t)\r\n}","function SaveBoard(board, key) {\r\n\r\n    let saveValue = `${board.length}::${board}`\r\n\r\n    localStorage.setItem(key, saveValue)\r\n}\r\n\r\nfunction SaveResources(key, value) {\r\n    localStorage.setItem(key, value)\r\n}\r\n\r\nfunction LoadResources(key) {\r\n    return Number(localStorage.getItem(key))\r\n}\r\n\r\nfunction LoadSolution(key) {\r\n    return localStorage.getItem(key)\r\n}\r\n\r\nfunction LocalToArray(value) {\r\n    let lengthValue = value.split('::')\r\n\r\n    if (lengthValue.length <= 1) {\r\n        return null\r\n    }\r\n\r\n    let length = lengthValue[0]\r\n\r\n    let splitValue = lengthValue[1].split(',')\r\n\r\n    let count = 0\r\n    let newBoard = []\r\n    for (let i = 0; i < length; i++) {\r\n        newBoard.push([])\r\n        for (let j = 0; j < length; j++) {\r\n            newBoard[i].push(String(splitValue[count]))\r\n            count++\r\n        }\r\n    }\r\n\r\n    return newBoard\r\n}\r\n\r\nexport { SaveBoard, LocalToArray, SaveResources, LoadResources , LoadSolution}","import { LoadSolution, SaveResources } from \"./saveValue\"\r\n\r\nfunction SolveOne(board) {\r\n\r\n    let solveList = LoadSolution(\"curSolveList\")\r\n\r\n    if(solveList == \"\")\r\n        return\r\n\r\n    solveList = solveList.split(\",\")\r\n\r\n    for (let i = 0; i < solveList.length; i++) {\r\n        let trySolve = solveList[0].split(\"\")\r\n\r\n        if (board[trySolve[0]][trySolve[1]] != trySolve[2]) {\r\n\r\n            solveList.shift()\r\n            SaveResources(\"curSolveList\", solveList)\r\n            \r\n            return trySolve\r\n        }\r\n        solveList.shift()\r\n    }\r\n}\r\n\r\nexport{SolveOne}","import { SolveOne } from '../HelperFunctions/solve'\r\n\r\n\r\nexport default function DesplaySolved(props) {\r\n\r\n    const fill = {\r\n        backgroundColor: \"crimson\",\r\n        width: `${props.fillbar}%`,\r\n        height: \"100%\",\r\n        cursor: \"pointer\"\r\n    }\r\n\r\n    return (\r\n        <div className=\"buttonList\">\r\n            {props.solved ?\r\n                <button className=\"button\" type=\"button\" onClick={() => props.collect(\"4x4\", props.collectAmount, props.size, props.squares)}>Complete</button> :\r\n                <button className=\"button\" type=\"button\" disabled>Incomplete</button>}\r\n\r\n            <button className=\"button\" type=\"button\" onClick={() => props.newGame(props.size, props.squares)}>New Sudoku</button>\r\n\r\n            <div id=\"Barfill\" onClick={() => props.clickBar(props.clickAmount)}>\r\n                <div style={fill}> </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}","\r\nexport default function DesplaySolved(props) {\r\n    return (\r\n        <div className=\"topBar\">\r\n            <span className=\"topText\">\r\n                Idel Sudoku\r\n            </span>\r\n        </div>\r\n    )\r\n}","import \"../styles/resources.css\"\r\n\r\nfunction resourcesRow(value, name, valuePerSecond, display){\r\n\r\n    if(!display)\r\n        return\r\n\r\n    return (\r\n        <tr>\r\n            <td>{name}</td>\r\n            <td>{value}</td>\r\n            <td>{valuePerSecond}/m</td>\r\n        </tr>\r\n    )\r\n\r\n}\r\n\r\nexport default function DisplayResources(props){\r\n    \r\n    return (\r\n        <dis>\r\n            <table className=\"resource\">\r\n                <tbody>\r\n                    <th>Resources</th>\r\n                    <th></th>\r\n                    <th></th>\r\n\r\n                    {props.resources.map(resource => {\r\n                       return resourcesRow(resource.Value,resource.Name, (resource.Interval/1000) * resource.AmountPar, resource.Display)\r\n                    })}\r\n\r\n                </tbody>\r\n            </table>\r\n        </dis>\r\n    )\r\n}","import { SaveResources } from \"./saveValue\"\r\n\r\nfunction FillArray(size) {\r\n    const fullNumberList = [1, 2, 3, 4, 5, 6, 7, 8, 9]\r\n    return fullNumberList.splice(0, size)\r\n}\r\n\r\nfunction CheckRowAndCulumn(arrayIndex, board, size) {\r\n    let checkRow = FillArray(size)\r\n    let checkColumn = FillArray(size)\r\n\r\n    for (let i = 0; i < size; i++) {\r\n        checkRow = checkRow.filter(number => number != board[arrayIndex][i])\r\n        checkColumn = checkColumn.filter(number => number != board[i][arrayIndex])\r\n    }\r\n\r\n    return checkRow.length == 0 && checkColumn.length == 0\r\n}\r\n\r\nfunction CheckSquare(board, size, squareSize, squareX, squareY) {\r\n    let checkSquare = FillArray(size)\r\n\r\n    for (let i = 0; i < squareSize; i++) {\r\n        for (let j = 0; j < squareSize; j++) {\r\n            checkSquare = checkSquare.filter(number => number != board[i + squareY][j + squareX])\r\n        }\r\n    }\r\n    return checkSquare.length == 0 ? true : false\r\n}\r\n\r\nfunction CheckSukoku(size, board, squares) {\r\n    let checkBoard = JSON.parse(JSON.stringify(board))\r\n\r\n    for (let i = 0; i < checkBoard.length; i++) {\r\n        for (let j = 0; j < checkBoard.length; j++) {\r\n\r\n            if (String(checkBoard[i][j]).includes(\"og\")) {\r\n                checkBoard[i][j] = checkBoard[i][j].replace('og', '')\r\n            }\r\n        }\r\n    }\r\n\r\n    for (let i = 0; i < size; i++) {\r\n        if (!CheckRowAndCulumn(i, checkBoard, size))\r\n            return false\r\n    }\r\n\r\n    for (let i = 0; i < squares; i++) {\r\n        for (let j = 0; j < squares; j++) {\r\n            if (!CheckSquare(checkBoard, size, squares, i * squares, j * squares))\r\n                return false\r\n        }\r\n    }\r\n\r\n    return true\r\n}\r\n\r\nfunction MakeSudoku(size, square) {\r\n    let numArry = FillArray(size)\r\n    let newBoard = Array(size).fill(null).map(() => Array(size).fill(numArry))\r\n    let pickerArr = [[Math.floor(Math.random() * size), Math.floor(Math.random() * size)]]\r\n    let pickerIndex = []\r\n\r\n    let index, randomNumber, randomIndexNumber\r\n\r\n    let notFull = true\r\n    while (notFull) {\r\n\r\n        pickerArr.sort((arr1, arr2) => arr1.length - arr2.length)\r\n\r\n        index = 0\r\n        if (pickerArr.length > 0) {\r\n\r\n            if (newBoard[pickerArr[index][0]][pickerArr[index][1]].length > 1) {\r\n\r\n                randomIndexNumber = Math.floor(Math.random() * newBoard[pickerArr[index][0]][pickerArr[index][1]].length)\r\n                randomNumber = newBoard[pickerArr[index][0]][pickerArr[index][1]][randomIndexNumber]\r\n\r\n                newBoard[pickerArr[index][0]][pickerArr[index][1]] = [randomNumber]\r\n                RemovePencelmark(pickerArr[index][0], pickerArr[index][1], newBoard, size, randomNumber, square, pickerIndex, pickerArr)\r\n            }\r\n            pickerArr.splice(index, 1)\r\n            pickerIndex.splice(index, 1)\r\n\r\n        }\r\n\r\n        if (pickerArr.length <= 0) {\r\n            notFull = false\r\n        }\r\n    }\r\n\r\n    if (!CheckSukoku(size, newBoard, square)) {\r\n        return MakeSudoku(size, square)\r\n    }\r\n\r\n    return newBoard\r\n}\r\n\r\nfunction RemovePencelmark(rowID, culumnID, newBoard, size, randomNumber, squareSize, pickerIndex, pickerArr) {\r\n\r\n    for (let i = 0; i < size; i++) {\r\n        if (newBoard[rowID][i].length > 1) {\r\n            newBoard[rowID][i] = newBoard[rowID][i].filter(number => number != randomNumber)\r\n\r\n            if (newBoard[rowID][i].length <= 1) {\r\n                RemovePencelmark(rowID, i, newBoard, size, newBoard[rowID][i][0], squareSize, pickerIndex, pickerArr)\r\n\r\n                if (pickerIndex.includes(`${rowID}${i}`)) {\r\n                    pickerArr.splice(pickerIndex.indexOf(`${rowID}${i}`), 1)\r\n                    pickerIndex.splice(pickerIndex.indexOf(`${rowID}${i}`), 1)\r\n                }\r\n            }\r\n            else if (!pickerIndex.includes(`${rowID}${i}`)) {\r\n                pickerIndex.push(`${rowID}${i}`)\r\n                pickerArr.push([rowID, i])\r\n            }\r\n        }\r\n\r\n        if (newBoard[i][culumnID].length > 1) {\r\n            newBoard[i][culumnID] = newBoard[i][culumnID].filter(number => number != randomNumber)\r\n\r\n            if (newBoard[i][culumnID].length <= 1) {\r\n                RemovePencelmark(i, culumnID, newBoard, size, newBoard[i][culumnID][0], squareSize, pickerIndex, pickerArr)\r\n\r\n                if (pickerIndex.includes(`${i}${culumnID}`)) {\r\n                    pickerArr.splice(pickerIndex.indexOf(`${i}${culumnID}`), 1)\r\n                    pickerIndex.splice(pickerIndex.indexOf(`${i}${culumnID}`), 1)\r\n                }\r\n            }\r\n            else if (!pickerIndex.includes(`${i}${culumnID}`)) {\r\n                pickerIndex.push(`${i}${culumnID}`)\r\n                pickerArr.push([i, culumnID])\r\n            }\r\n        }\r\n    }\r\n\r\n    let curSquareY = Math.floor(rowID / squareSize) * squareSize\r\n    let curSquareX = Math.floor(culumnID / squareSize) * squareSize\r\n\r\n    for (let i = 0; i < squareSize; i++) {\r\n        for (let j = 0; j < squareSize; j++) {\r\n            if (newBoard[i + curSquareY][j + curSquareX].length > 1) {\r\n                newBoard[i + curSquareY][j + curSquareX] = newBoard[i + curSquareY][j + curSquareX].filter(number => number != randomNumber)\r\n\r\n                if (newBoard[i + curSquareY][j + curSquareX].length <= 1) {\r\n                    RemovePencelmark(i + curSquareY, j + curSquareX, newBoard, size, newBoard[i + curSquareY][j + curSquareX][0], squareSize, pickerIndex, pickerArr)\r\n\r\n                    if (pickerIndex.includes(`${i + curSquareY}${j + curSquareX}`)) {\r\n                        pickerArr.splice(pickerIndex.indexOf(`${i + curSquareY}${j + curSquareX}`), 1)\r\n                        pickerIndex.splice(pickerIndex.indexOf(`${i + curSquareY}${j + curSquareX}`), 1)\r\n                    }\r\n                }\r\n                else if (!pickerIndex.includes(`${i + curSquareY}${j + curSquareX}`)) {\r\n                    pickerIndex.push(`${i + curSquareY}${j + curSquareX}`)\r\n                    pickerArr.push([i + curSquareY, j + curSquareX])\r\n                }\r\n            }\r\n        }\r\n    }\r\n}\r\n\r\nfunction MarkOG(board) {\r\n\r\n    for (let i = 0; i < board.length; i++) {\r\n        for (let j = 0; j < board.length; j++) {\r\n            if (board[i][j].length > 0) {\r\n                board[i][j] = `${board[i][j]}og`\r\n            }\r\n        }\r\n    }\r\n}\r\n\r\nfunction RemoveNumbers(board, remove) {\r\n\r\n    let size = board.length\r\n    let randomIndex = RandomNewIndex(size, remove)\r\n\r\n    let solveList = []\r\n\r\n    randomIndex.forEach(index => {\r\n        let removeIndex = GetIndex(size, index)\r\n\r\n        solveList.push(`${removeIndex[0]}${removeIndex[1]}${board[removeIndex[0]][removeIndex[1]]}`)\r\n\r\n        board[removeIndex[0]][removeIndex[1]] = []\r\n    });\r\n\r\n    SaveResources(\"curSolveList\",solveList)\r\n\r\n    MarkOG(board)\r\n\r\n    return board\r\n}\r\n\r\nfunction RandomNewIndex(size, remove) {\r\n    let arrOfIndex = []\r\n    let removeIndex = []\r\n\r\n    for (let i = 0; i < size * size; i++) {\r\n        arrOfIndex.push(i)\r\n    }\r\n\r\n    arrOfIndex.sort(() => (Math.random() > 0.5) ? 1 : -1);\r\n\r\n    for (let i = 0; i < remove; i++) {\r\n        removeIndex.push(arrOfIndex[i])\r\n    }\r\n\r\n    return removeIndex\r\n}\r\n\r\nfunction GetIndex(size, number) {\r\n    let row = Math.floor(number / size)\r\n    let culumn = number % size\r\n    return [row, culumn]\r\n}\r\n\r\n\r\n\r\nexport { MakeSudoku, RemoveNumbers, CheckSukoku, FillArray, CheckSquare, CheckRowAndCulumn }","import { useState, useEffect } from \"react\"\r\nimport { LoadResources } from \"../HelperFunctions/saveValue\"\r\nimport \"../styles/shop.css\"\r\n// import {Purchase} from '../Components/complete'\r\n\r\nclass Item {\r\n    constructor(available, affordable, name, title, description, costs,\r\n        startCosts, maxTimesPurchase, priors, priceFunc, incremenAmount, text1, text2) {\r\n        this.Available = available\r\n        this.Affordable = affordable\r\n        this.Name = name\r\n        this.Title = title\r\n        this.Description = description\r\n        this.Costs = costs\r\n        this.StartCosts = startCosts\r\n        this.MaxTimesPurchase = maxTimesPurchase\r\n        this.Priors = priors\r\n        this.PriceFunc = priceFunc\r\n        this.IncremenAmount = incremenAmount\r\n        this.Text1 = text1\r\n        this.Text2 = text2\r\n    }\r\n\r\n    PriceFunc = () => { }\r\n    ClickFun = () => { }\r\n    IncremenAmount = () => { }\r\n\r\n    PriceNumber = () => {\r\n        let purchaseAmount = LoadResources(this.Name)\r\n        this.Costs.forEach((price, index) => {\r\n            this.Costs[index] = [this.Costs[index][0], this.PriceFunc(this.StartCosts[index], purchaseAmount)]\r\n        })\r\n    }\r\n\r\n    CostText = () => {\r\n        let costText = []\r\n\r\n        this.Costs.forEach(price => {\r\n            costText.push(<span>{price[0]}: <span className=\"price\"> {price[1]}</span><br /></span>)\r\n        });\r\n        return costText\r\n    }\r\n\r\n    IsAffordable = (resources) => {\r\n        let affordable = true\r\n        this.Costs.forEach(price => {\r\n            if (resources.find(resource => resource.Name == price[0]).Value < price[1]) {\r\n                affordable = false\r\n            }\r\n        })\r\n        this.Affordable = affordable\r\n    }\r\n\r\n    IsAvailable = () => {\r\n\r\n        let ready = true\r\n\r\n        this.Priors.forEach((prior) => {\r\n            let tempPurchase = LoadResources(prior)\r\n\r\n            if (tempPurchase <= 0) {\r\n                ready = false\r\n            }\r\n        })\r\n\r\n        if (ready)\r\n            this.Available = true\r\n\r\n    }\r\n\r\n    IsPurchase = () => {\r\n\r\n        let tempPurchase = LoadResources(this.Name)\r\n\r\n        if (tempPurchase >= this.MaxTimesPurchase) {\r\n            this.Available = false\r\n        }\r\n    }\r\n}\r\n\r\nexport const shopItems = [\r\n    new Item(true, false,\r\n        \"Clicker\",\r\n        \"Buy a clicker for the progress bar\",\r\n        \"It will click ones a second\",\r\n        [[\"4x4\", 1]], [1],\r\n        1, [\"\"],\r\n        () => 1,\r\n        () => true),\r\n\r\n    new Item(true, false,\r\n        \"Clicker Speed\",\r\n        \"Upgrade the clickers speed\",\r\n        `The clicker vill click [] faster`,\r\n        [[\"4x4\", 3]], [3], 30,\r\n        [\"Clicker\"],\r\n        (startPrice, count) => Math.floor(startPrice + Math.pow(count, 1.48)),\r\n        (count) => 1000 - (Math.log2(count + 1) * 200),\r\n        \"The clicker vill click [\", \"] faster\"),\r\n\r\n    new Item(false, false,\r\n        \"Clicker strength\",\r\n        \"Upgrade the clickers strength\",\r\n        \"It will click [] stronger\",\r\n        [[\"4x4\", 5]], [5], 20,\r\n        [\"Clicker\", \"Clicker Speed\"],\r\n        (startPrice, count) => Math.floor(startPrice + Math.pow(count, 1.51)),\r\n        (count) => (Math.log2(count + 2.3) * 2) - 1,\r\n        \"Clicks vill click [\", \"] stronger\"),\r\n\r\n    new Item(false, false,\r\n        \"Auto Completer\",\r\n        \"The sudoku vil now auto complete\",\r\n        \"It will click [] stronger\",\r\n        [[\"4x4\", 15]], [15], 1,\r\n        [\"Clicker\", \"Clicker Speed\"],\r\n        () => 15,\r\n        () => true),\r\n\r\n    new Item(false, false,\r\n        \"Increase 4x4\",\r\n        \"Increase Points from 4x4\",\r\n        \"It will increase the points gaind by []\",\r\n        [[\"4x4\", 50]], [50], 10,\r\n        [\"Clicker\", \"Clicker Speed\"],\r\n        (startPrice, count) => Math.round(50 + Math.pow((count*30),(1.2))),\r\n        (count) => count + 1,\r\n        \"It will increase the points gaind by [\", \"]\"),\r\n\r\n    // increasePointsOn9x9: false,\r\n\r\n    // New4x4: false,\r\n    // New9x9: false\r\n]\r\n\r\nfunction buyUint(item) {\r\n    if (!item.Available) {\r\n        return\r\n    }\r\n\r\n    return (\r\n        <button disabled={!item.Affordable} onClick={() => item.ClickFun(item.Costs, item.Name, item.MaxTimesPurchase)} className=\"shopBT\" type=\"button\">{item.Name}\r\n            <div className=\"tooltiptext\">\r\n                <div className=\"description\">{item.Title}</div>\r\n                <div className=\"description\">{item.CostText()}</div>\r\n                <div className=\"description\">{item.Description}</div>\r\n            </div>\r\n        </button>\r\n    )\r\n}\r\n\r\nfunction DynamicDescription(item) {\r\n    let purchaseAmount = LoadResources(item.Name)\r\n    let number = item.IncremenAmount(purchaseAmount + 1) - item.IncremenAmount(purchaseAmount)\r\n    number = Math.abs(number.toFixed(2))\r\n\r\n    return `${item.Text1}${number}${item.Text2}`\r\n}\r\n\r\nexport function Shop(props) {\r\n\r\n    const [Shop, SetShop] = useState(shopItems)\r\n\r\n    return (\r\n        <div className=\"shop\">\r\n            <div className=\"shopHeder\">\r\n                Shop\r\n            </div>\r\n\r\n            {Shop.map(shopItem => {\r\n\r\n                let pruchaseFunc = props.pruchaseFuncs.find(pruchaseFunc => pruchaseFunc.Name == shopItem.Name)\r\n\r\n                if (pruchaseFunc != undefined)\r\n                    shopItem.ClickFun = pruchaseFunc.Func\r\n\r\n                shopItem.IsAffordable(props.resources)\r\n                shopItem.PriceNumber()\r\n\r\n                shopItem.IsAvailable()\r\n                shopItem.IsPurchase()\r\n\r\n                if (shopItem.Text1)\r\n                    shopItem.Description = DynamicDescription(shopItem)\r\n\r\n                return buyUint(shopItem)\r\n            })}\r\n\r\n        </div>\r\n    )\r\n}","import './App.css';\r\nimport Sudoku from './Components/sudoku'\r\nimport NumberInput from './Components/numberInput'\r\nimport Complete from './Components/complete'\r\nimport Header from './Components/header'\r\nimport DisplayResources from './Components/resources'\r\nimport { MakeSudoku, RemoveNumbers, CheckSukoku } from './HelperFunctions/generatorSudoku'\r\nimport { useEffect, useState, useRef } from \"react\"\r\nimport { SaveBoard, LocalToArray, LoadResources, SaveResources } from './HelperFunctions/saveValue'\r\nimport { CollectResources } from './HelperFunctions/getResources'\r\nimport { Shop, shopItems } from './Components/shop'\r\nimport { SolveOne } from './HelperFunctions/solve'\r\n\r\nlet seleNumber = 1\r\n\r\nfunction App() {\r\n\tlet remove = 9\r\n\tlet size = 4\r\n\tlet squares = 2\r\n\r\n\tclass Resource {\r\n\t\tName = \"name\"\r\n\t\tValue = 0\r\n\t\tInterval = 0\r\n\t\tAmountPar = 0\r\n\t\tDisplay = false\r\n\r\n\t\tconstructor(name, value, interval, amountPar, display) {\r\n\t\t\tthis.Name = name\r\n\t\t\tthis.Value = value\r\n\t\t\tthis.Interval = interval\r\n\t\t\tthis.AmountPar = amountPar\r\n\t\t\tthis.Display = display\r\n\t\t}\r\n\t}\r\n\r\n\tlet currencys =\r\n\t\t[\r\n\t\t\tnew Resource(\"4x4\", 0, 0, 0, true),\r\n\t\t\tnew Resource(\"9x9\")\r\n\t\t]\r\n\r\n\tconst [selectedNumber, SetSelectedNumber] = useState(seleNumber)\r\n\tconst [gameBoard, SetGameBoard] = useState(Array(size).fill(Array(size).fill(null)))\r\n\tconst [resources, SetResources] = useState(currencys)\r\n\tconst [solved, SetSolved] = useState(false)\r\n\tconst [FillBar, SetFillBar] = useState(0)\r\n\tconst [Amounts, SetAmounts] = useState([1, 1])\r\n\tconst [Actives, SetActives] = useState([false, false])\r\n\tconst [Intervals, SetIntervals] = useState([1000])\r\n\r\n\tuseEffect(() => {\r\n\t\tGetIncrementels()\r\n\r\n\t\tlet savedBoard = localStorage.getItem(\"curBoard\")\r\n\t\tif (savedBoard != null) {\r\n\r\n\t\t\tlet curBoard = LocalToArray(savedBoard)\r\n\t\t\tSetGameBoard(curBoard)\r\n\t\t}\r\n\t\telse {\r\n\t\t\tNewGame(size, squares);\r\n\t\t}\r\n\t\tSetResources(LoadAllResources())\r\n\t}, [])\r\n\r\n\r\n\tuseEffect(() => {\r\n\t\tSetSolved(CheckSukoku(size, gameBoard, squares))\r\n\t}, [gameBoard])\r\n\r\n\tuseInterval(clickBar, Amounts[0], Actives[0], Intervals[0])\r\n\r\n\tuseEffect(() => {\r\n\t\tif (Actives[1] && solved)\r\n\t\t\tcollect(\"4x4\",Amounts[1],size,squares)\r\n\t}, [solved])\r\n\r\n\tfunction GetIncrementels() {\r\n\t\tlet shop = shopItems\r\n\t\tlet tempActives = Actives\r\n\t\tlet tempIntervals = Intervals\r\n\t\tlet tempAmounts = Amounts\r\n\t\t\r\n\t\ttempActives[0] = LoadResources(shop[0].Name) > 0\r\n\t\ttempIntervals[0] = shop[1].IncremenAmount(LoadResources(shop[1].Name))\r\n\t\ttempAmounts[0] = shop[2].IncremenAmount(LoadResources(shop[2].Name))\r\n\t\ttempActives[1] = LoadResources(shop[3].Name) > 0\r\n\t\ttempAmounts[1] = shop[4].IncremenAmount(LoadResources(shop[4].Name))\r\n\t\t\r\n\t\tSetIntervals(tempIntervals)\r\n\t\tSetActives(tempActives)\r\n\t\tSetAmounts(tempAmounts)\r\n\t}\r\n\r\n\tfunction NewGame(size, squares) {\r\n\t\tlet newBoard = MakeSudoku(size, squares)\r\n\t\tnewBoard = RemoveNumbers(newBoard, remove)\r\n\t\tSetGameBoard(newBoard)\r\n\t\tSaveBoard(newBoard, \"curBoard\")\r\n\t}\r\n\r\n\r\n\tfunction Purchase(costs, keyName, max) {\r\n\t\tlet tempMax = LoadResources(keyName)\r\n\t\tSaveResources(keyName, tempMax + 1)\r\n\r\n\t\tlet tempResource = LoadResources(keyName)\r\n\t\tif (tempResource >= max) {\r\n\t\t\treturn\r\n\t\t}\r\n\r\n\t\tlet tempResources = resources\r\n\r\n\t\tcosts.forEach(price => {\r\n\t\t\tlet resourceIndex = tempResources.findIndex(resource => resource.Name == price[0])\r\n\t\t\ttempResources[resourceIndex].Value = tempResources[resourceIndex].Value - price[1]\r\n\t\t\tSaveResources(price[0], tempResources[resourceIndex].Value)\r\n\t\t})\r\n\r\n\t\tSetResources([...tempResources])\r\n\t}\r\n\r\n\tfunction PurchaseClicker(cost, keyName, max) {\r\n\t\tPurchase(cost, keyName, max)\r\n\t\tlet tempActive = Actives\r\n\t\ttempActive[0] = true\r\n\t\tSetActives([...tempActive])\r\n\t}\r\n\r\n\tfunction PurchaseClickerSpeed(cost, keyName, max) {\r\n\t\tPurchase(cost, keyName, max)\r\n\t\tlet purchaseAmount = LoadResources(keyName)\r\n\r\n\t\tlet tempIntervals = Intervals\r\n\t\ttempIntervals[0] = shopItems[1].IncremenAmount(purchaseAmount)\r\n\r\n\t\tSetIntervals([...tempIntervals])\r\n\t}\r\n\r\n\tfunction PurchaseClickerStrengh(cost, keyName, max) {\r\n\t\tPurchase(cost, keyName, max)\r\n\r\n\t\tlet purchaseAmount = LoadResources(keyName)\r\n\t\tlet tempAmounts = Amounts\r\n\t\ttempAmounts[0] = shopItems[2].IncremenAmount(purchaseAmount)\r\n\t\tSetAmounts([...tempAmounts])\r\n\t}\r\n\r\n\tfunction PurchaseCompleter(cost, keyName, max) {\r\n\t\tPurchase(cost, keyName, max)\r\n\t\tlet tempActive = Actives\r\n\t\ttempActive[1] = true\r\n\t\tSetActives([...tempActive])\r\n\t}\r\n\r\n\tfunction PurchaseIncrease4x4(cost, keyName, max) {\r\n\t\tPurchase(cost, keyName, max)\r\n\r\n\t\tlet purchaseAmount = LoadResources(keyName)\r\n\t\tlet tempAmounts = Amounts\r\n\t\ttempAmounts[1] = shopItems[4].IncremenAmount(purchaseAmount)\r\n\t\tSetAmounts([...tempAmounts])\r\n\t}\r\n\r\n\tfunction clickBar(barFill) {\r\n\t\tlet tempFill = FillBar + barFill\r\n\r\n\t\tif (tempFill >= 100) {\r\n\t\t\tif (solved) {\r\n\t\t\t\tSetFillBar(100)\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\tSetFillBar(0)\r\n\t\t\t\tNewSolve(SolveOne(gameBoard))\r\n\t\t\t}\r\n\t\t}\r\n\t\telse\r\n\t\t\tSetFillBar(tempFill)\r\n\t}\r\n\r\n\tclass PruchaseFunc {\r\n\t\tconstructor(name, func) {\r\n\t\t\tthis.Name = name\r\n\t\t\tthis.Func = func\r\n\t\t}\r\n\t}\r\n\r\n\tlet pruchaseFuncs = [\r\n\t\tnew PruchaseFunc(shopItems[0].Name, PurchaseClicker),\r\n\t\tnew PruchaseFunc(shopItems[1].Name, PurchaseClickerSpeed),\r\n\t\tnew PruchaseFunc(shopItems[2].Name, PurchaseClickerStrengh),\r\n\t\tnew PruchaseFunc(shopItems[3].Name, PurchaseCompleter),\r\n\t\tnew PruchaseFunc(shopItems[4].Name, PurchaseIncrease4x4)\r\n\t]\r\n\r\n\tfunction LoadAllResources() {\r\n\t\tcurrencys.map((currency, index, currencys) => {\r\n\t\t\tcurrencys[index].Value = LoadResources(currency.Name)\r\n\t\t})\r\n\r\n\t\treturn currencys\r\n\t}\r\n\r\n\tfunction collect(name, value, size, squares) {\r\n\r\n\t\tlet tempResources = resources\r\n\r\n\t\ttempResources.find(resource => resource.Name == name).Value = CollectResources(name, value)\r\n\r\n\t\tSetResources(tempResources)\r\n\t\tNewGame(size, squares)\r\n\t}\r\n\r\n\tfunction handleClick(x, y) {\r\n\t\tif (gameBoard == null) {\r\n\t\t\treturn\r\n\t\t}\r\n\t\tlet tempGameBoard = [...gameBoard]\r\n\t\ttempGameBoard[x][y] = String(seleNumber)\r\n\t\tSetGameBoard(tempGameBoard)\r\n\t\tSaveBoard(tempGameBoard, \"curBoard\")\r\n\t}\r\n\r\n\tfunction NewSolve(solve) {\r\n\t\tif (solve == null) {\r\n\t\t\treturn\r\n\t\t}\r\n\t\tlet tempGameBoard = [...gameBoard]\r\n\t\ttempGameBoard[solve[0]][solve[1]] = String(solve[2])\r\n\t\tSetGameBoard(tempGameBoard)\r\n\t\tSaveBoard(tempGameBoard, \"curBoard\")\r\n\t}\r\n\r\n\tconst handleNumberClick = (number) => {\r\n\t\tseleNumber = number.target.value\r\n\t\tSetSelectedNumber(number.target.value)\r\n\t}\r\n\r\n\tuseEffect(() => {\r\n\t\tconst handleInput = (e) => {\r\n\t\t\tif (e.key <= size && e.key != 0) {\r\n\t\t\t\tSetSelectedNumber(e.key)\r\n\t\t\t\tseleNumber = e.key\r\n\t\t\t}\r\n\t\t}\r\n\t\tdocument.addEventListener(\"keydown\", handleInput);\r\n\r\n\t\treturn () => {\r\n\t\t\tdocument.removeEventListener(\"keydown\", handleInput);\r\n\t\t};\r\n\t}, []);\r\n\r\n\treturn (\r\n\t\t<div>\r\n\t\t\t<Header></Header>\r\n\t\t\t<div className=\"game\">\r\n\t\t\t\t<div>\r\n\t\t\t\t\t<DisplayResources resources={resources} ></DisplayResources>\r\n\t\t\t\t\t<NumberInput selectedNumber={selectedNumber} size={size} callBack={handleNumberClick} />\r\n\t\t\t\t\t<div className=\"sudoku\">\r\n\t\t\t\t\t\t<Sudoku\r\n\t\t\t\t\t\t\tsize={size}\r\n\t\t\t\t\t\t\tsquares={squares}\r\n\t\t\t\t\t\t\tcallBack={handleClick}\r\n\t\t\t\t\t\t\tvalue={gameBoard}\r\n\t\t\t\t\t\t></Sudoku>\r\n\t\t\t\t\t\t<Complete\r\n\t\t\t\t\t\t\tsolved={solved}\r\n\t\t\t\t\t\t\tnewGame={NewGame}\r\n\t\t\t\t\t\t\tsquares={squares}\r\n\t\t\t\t\t\t\tsize={size}\r\n\t\t\t\t\t\t\tcollect={collect}\r\n\t\t\t\t\t\t\tclickBar={clickBar}\r\n\t\t\t\t\t\t\tfillbar={FillBar}\r\n\t\t\t\t\t\t\tclickAmount={Amounts[0]}\r\n\t\t\t\t\t\t\tcollectAmount={Amounts[1]}\r\n\t\t\t\t\t\t></Complete>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div>\r\n\t\t\t\t\t<Shop resources={resources} pruchaseFuncs={pruchaseFuncs}></Shop>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t)\r\n}\r\n\r\nfunction useInterval(callBack, amount, active, interval) {\r\n\tconst savedCallback = useRef();\r\n\r\n\tuseEffect(() => {\r\n\t\tsavedCallback.current = callBack;\r\n\t})\r\n\r\n\tuseEffect(() => {\r\n\t\tif (active) {\r\n\t\t\tfunction tick() {\r\n\t\t\t\tsavedCallback.current(amount);\r\n\t\t\t}\r\n\r\n\t\t\tlet id = setInterval(tick, interval);\r\n\t\t\treturn () => clearInterval(id);\r\n\t\t}\r\n\t});\r\n}\r\n\r\nexport default App;","import { SaveResources, LoadResources } from \"./saveValue\";\r\n\r\nfunction CollectResources(key, value){\r\n\r\n    let curValue = LoadResources(key)\r\n    curValue = curValue + value\r\n    SaveResources(key, curValue)\r\n    \r\n    return curValue\r\n}\r\n\r\n\r\nexport{CollectResources}","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);"],"sourceRoot":""}